// <auto-generated />
using System;
using Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220519152841_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Entidades.Ata", b =>
                {
                    b.Property<int>("CodigoAta")
                        .HasColumnType("int");

                    b.Property<int>("AnoAta")
                        .HasColumnType("int");

                    b.Property<int>("AnoPregao")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinalVigencia")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataHomologacao")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataPublicacaoDOE")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataPublicacaoSistema")
                        .HasColumnType("date");

                    b.Property<double>("LimiteAdesao")
                        .HasColumnType("float");

                    b.Property<string>("NumeroPregao")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ObjetoResumido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Publicada")
                        .HasColumnType("bit");

                    b.HasKey("CodigoAta", "AnoAta");

                    b.ToTable("Atas");
                });

            modelBuilder.Entity("Dominio.Entidades.Detentora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("Varchar(18)");

                    b.Property<string>("Email")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Endereco")
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("ItemCodigoItem")
                        .HasColumnType("int");

                    b.Property<string>("Municipio")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pessoa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("Varchar(15)");

                    b.Property<string>("Uf")
                        .HasColumnType("Varchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCodigoItem");

                    b.ToTable("Detentoras");
                });

            modelBuilder.Entity("Dominio.Entidades.Item", b =>
                {
                    b.Property<int>("CodigoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoAta")
                        .HasColumnType("int");

                    b.Property<int?>("AtaAnoAta")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoAta")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoAta")
                        .HasColumnType("int");

                    b.Property<int>("ConsumoEstimado")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("Varchar(8000)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("PrecoMercado")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("PrecoRegistrado")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnidadeAquisicao")
                        .IsRequired()
                        .HasColumnType("Varchar(20)");

                    b.HasKey("CodigoItem");

                    b.HasIndex("CodigoAta", "AtaAnoAta");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Dominio.Entidades.ItemParticipante", b =>
                {
                    b.Property<int>("CodigoAta")
                        .HasColumnType("int");

                    b.Property<int>("AnoAta")
                        .HasColumnType("int");

                    b.Property<int>("CodigoItem")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUnidadeAdministrativa")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCodigoItem")
                        .HasColumnType("int");

                    b.HasKey("CodigoAta", "AnoAta");

                    b.HasIndex("ItemCodigoItem");

                    b.ToTable("ItensParticipantes");
                });

            modelBuilder.Entity("Dominio.Entidades.ProgramacaoConsumoParticipante", b =>
                {
                    b.Property<int>("CodigoAta")
                        .HasColumnType("int");

                    b.Property<int>("AnoAta")
                        .HasColumnType("int");

                    b.Property<decimal>("Aditivo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("CodigoItem")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUnidadeAdministrativa")
                        .HasColumnType("int");

                    b.Property<int>("ConsumoEstimado")
                        .HasColumnType("int");

                    b.Property<int?>("ItemParticipanteAnoAta")
                        .HasColumnType("int");

                    b.Property<int?>("ItemParticipanteCodigoAta")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Transferido")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("CodigoAta", "AnoAta");

                    b.HasIndex("ItemParticipanteCodigoAta", "ItemParticipanteAnoAta");

                    b.ToTable("ProgamacaoConsumoParticipoantes");
                });

            modelBuilder.Entity("Dominio.Entidades.UnidadeAdministrativa", b =>
                {
                    b.Property<int>("CodigoUnidadeAdministrativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("EsferaAdministrativa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ItemParticipanteAnoAta")
                        .HasColumnType("int");

                    b.Property<int?>("ItemParticipanteCodigoAta")
                        .HasColumnType("int");

                    b.Property<string>("NomeUnidadeAdministrativa")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<bool>("OrgaoEx")
                        .HasColumnType("bit");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("UnidadeDaFederacao")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("CodigoUnidadeAdministrativa");

                    b.HasIndex("ItemParticipanteCodigoAta", "ItemParticipanteAnoAta");

                    b.ToTable("UnidadesAdministrativas");
                });

            modelBuilder.Entity("Dominio.Entidades.Detentora", b =>
                {
                    b.HasOne("Dominio.Entidades.Item", "Item")
                        .WithMany("Detentoras")
                        .HasForeignKey("ItemCodigoItem");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Dominio.Entidades.Item", b =>
                {
                    b.HasOne("Dominio.Entidades.Ata", "Ata")
                        .WithMany("Itens")
                        .HasForeignKey("CodigoAta", "AtaAnoAta");

                    b.Navigation("Ata");
                });

            modelBuilder.Entity("Dominio.Entidades.ItemParticipante", b =>
                {
                    b.HasOne("Dominio.Entidades.Item", "Item")
                        .WithMany("Participantes")
                        .HasForeignKey("ItemCodigoItem");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Dominio.Entidades.ProgramacaoConsumoParticipante", b =>
                {
                    b.HasOne("Dominio.Entidades.ItemParticipante", "ItemParticipante")
                        .WithMany("ProgramacaoConsumoParticipantes")
                        .HasForeignKey("ItemParticipanteCodigoAta", "ItemParticipanteAnoAta");

                    b.Navigation("ItemParticipante");
                });

            modelBuilder.Entity("Dominio.Entidades.UnidadeAdministrativa", b =>
                {
                    b.HasOne("Dominio.Entidades.ItemParticipante", "ItemParticipante")
                        .WithMany("UnidadesAdministrativas")
                        .HasForeignKey("ItemParticipanteCodigoAta", "ItemParticipanteAnoAta");

                    b.Navigation("ItemParticipante");
                });

            modelBuilder.Entity("Dominio.Entidades.Ata", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Dominio.Entidades.Item", b =>
                {
                    b.Navigation("Detentoras");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("Dominio.Entidades.ItemParticipante", b =>
                {
                    b.Navigation("ProgramacaoConsumoParticipantes");

                    b.Navigation("UnidadesAdministrativas");
                });
#pragma warning restore 612, 618
        }
    }
}
